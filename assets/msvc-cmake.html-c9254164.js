import{_ as l,M as c,p as r,q as i,R as a,N as e,V as o,t as s,a1 as p}from"./framework-5f7e94ef.js";const u={},d=a("h1",{id:"windows-下使用-msvc-编译-cmake-项目",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#windows-下使用-msvc-编译-cmake-项目","aria-hidden":"true"},"#"),s(" Windows 下使用 MSVC 编译 CMake 项目")],-1),k={class:"table-of-contents"},_=p(`<h2 id="_1-编译和构建" tabindex="-1"><a class="header-anchor" href="#_1-编译和构建" aria-hidden="true">#</a> 1. 编译和构建</h2><p>下面使用常见的 CMake 配置和构建命令。</p><p>配置项目到 <code>./build/</code> 文件夹下，使用 Visual Studio 2019 生成器，使用 <code>x64</code> 构建工具，使用 <code>x64</code> 构建平台。</p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code>cmake <span class="token parameter variable">-B</span> ./build <span class="token parameter variable">-G</span> <span class="token string">&quot;Visual Studio 16 2019&quot;</span> <span class="token parameter variable">-T</span> <span class="token assign-left variable">host</span><span class="token operator">=</span>x64 <span class="token parameter variable">-A</span> x64 <span class="token builtin class-name">.</span>
</code></pre></div><p>构建项目，使用 <code>Release</code> 配置，使用 <code>ALL_BUILD</code> 目标，使用 4 个线程。</p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code>cmake <span class="token parameter variable">--build</span> ./build <span class="token parameter variable">--config</span> Release <span class="token parameter variable">--target</span> ALL_BUILD <span class="token parameter variable">-j</span> <span class="token number">4</span> --
</code></pre></div><h2 id="_2-常见问题" tabindex="-1"><a class="header-anchor" href="#_2-常见问题" aria-hidden="true">#</a> 2. 常见问题</h2><h3 id="_2-1-设置编译器的默认编码为-utf-8" tabindex="-1"><a class="header-anchor" href="#_2-1-设置编译器的默认编码为-utf-8" aria-hidden="true">#</a> 2.1 设置编译器的默认编码为 UTF-8</h3><p>下面在 <code>CMakeLists.txt</code> 文件指定编译器的默认编码为 UTF-8。</p>`,9),h=a("code",null,"/utf-8",-1),f=a("code",null,"/source-charset:utf-8 /execution-charset:utf-8",-1),m=a("sup",{class:"footnote-ref"},[a("a",{href:"#footnote1"},"[1]"),a("a",{class:"footnote-anchor",id:"footnote-ref1"})],-1),g=a("code",null,"/utf-8",-1),b={href:"https://learn.microsoft.com/zh-cn/cpp/build/reference/utf-8-set-source-and-executable-character-sets-to-utf-8",target:"_blank",rel:"noopener noreferrer"},v=p(`<p>你可以使用下面的任意一组代码：</p><div class="language-cmake" data-ext="cmake"><pre class="language-cmake"><code><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">MSVC</span><span class="token punctuation">)</span>
    <span class="token keyword">add_compile_options</span><span class="token punctuation">(</span>/utf-<span class="token number">8</span><span class="token punctuation">)</span>
<span class="token keyword">endif</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre></div><div class="language-cmake" data-ext="cmake"><pre class="language-cmake"><code><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">MSVC</span><span class="token punctuation">)</span>
    <span class="token keyword">add_compile_options</span><span class="token punctuation">(</span>/source-charset:utf-<span class="token number">8</span><span class="token punctuation">)</span>
    <span class="token keyword">add_compile_options</span><span class="token punctuation">(</span>/execution-charset:utf-<span class="token number">8</span><span class="token punctuation">)</span>
<span class="token keyword">endif</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre></div><div class="language-cmake" data-ext="cmake"><pre class="language-cmake"><code><span class="token keyword">add_compile_options</span><span class="token punctuation">(</span><span class="token string">&quot;$&lt;$&lt;CXX_COMPILER_ID:MSVC&gt;:/utf-8&gt;&quot;</span><span class="token punctuation">)</span>
</code></pre></div><div class="language-cmake" data-ext="cmake"><pre class="language-cmake"><code><span class="token keyword">add_compile_options</span><span class="token punctuation">(</span><span class="token string">&quot;$&lt;$&lt;CXX_COMPILER_ID:MSVC&gt;:/source-charset:utf-8&gt;&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">add_compile_options</span><span class="token punctuation">(</span><span class="token string">&quot;$&lt;$&lt;CXX_COMPILER_ID:MSVC&gt;:/execution-charset:utf-8&gt;&quot;</span><span class="token punctuation">)</span>
</code></pre></div><hr class="footnotes-sep">`,6),x={class:"footnotes"},C={class:"footnotes-list"},w={id:"footnote1",class:"footnote-item"},M={href:"http://learn.microsoft.com",target:"_blank",rel:"noopener noreferrer"},V={href:"https://learn.microsoft.com/zh-cn/cpp/build/reference/utf-8-set-source-and-executable-character-sets-to-utf-8",target:"_blank",rel:"noopener noreferrer"},L=a("a",{href:"#footnote-ref1",class:"footnote-backref"},"↩︎",-1);function y(I,q){const n=c("router-link"),t=c("ExternalLinkIcon");return r(),i("div",null,[d,a("nav",k,[a("ul",null,[a("li",null,[e(n,{to:"#_1-编译和构建"},{default:o(()=>[s("1. 编译和构建")]),_:1})]),a("li",null,[e(n,{to:"#_2-常见问题"},{default:o(()=>[s("2. 常见问题")]),_:1}),a("ul",null,[a("li",null,[e(n,{to:"#_2-1-设置编译器的默认编码为-utf-8"},{default:o(()=>[s("2.1 设置编译器的默认编码为 UTF-8")]),_:1})])])])])]),_,a("p",null,[s("其中 "),h,s(" 标志和 "),f,s(" 标志的作用是一样的"),m,s("。如果想了解更多 "),g,s(" 标志请阅读 "),a("a",b,[s("参考文献"),e(t)]),s("。")]),v,a("section",x,[a("ol",C,[a("li",w,[a("p",null,[s("将源字符集和执行字符集设置为 UTF-8，"),a("a",M,[s("learn.microsoft.com"),e(t)]),s("，"),a("a",V,[s("https://learn.microsoft.com/zh-cn/cpp/build/reference/utf-8-set-source-and-executable-character-sets-to-utf-8"),e(t)]),s(),L])])])])])}const B=l(u,[["render",y],["__file","msvc-cmake.html.vue"]]);export{B as default};
